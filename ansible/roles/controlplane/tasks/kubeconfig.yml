- name: Creates directory loop
  file:
    path: "{{item}}"
    state: directory
    owner: root
    group: root
    mode: '0700'
  loop:
    - /root/.kube/
    - /etc/kubernetes/config

- name: kubectl config step 1
  ansible.builtin.command: "kubectl config set-cluster kubernetes-the-hard-way --certificate-authority={{CERT_PATH}}/ca_kubernetes.pem --embed-certs=true --server=https://{{KUBERNETES_PUBLIC_ADDRESS}}:6443 --kubeconfig=/etc/kubernetes/config/kube-proxy.kubeconfig"
- name: kubectl config step 2
  ansible.builtin.command: "kubectl config set-credentials system:kube-proxy --client-certificate={{CERT_PATH}}/kube-proxy.pem --client-key={{CERT_PATH}}/kube-proxy.key --embed-certs=true --kubeconfig=/etc/kubernetes/config/kube-proxy.kubeconfig"
- name: kubectl config step 3
  ansible.builtin.command: "kubectl config set-context default --cluster=kubernetes-the-hard-way --user=system:kube-proxy --kubeconfig=/etc/kubernetes/config/kube-proxy.kubeconfig"
- name: kubectl config step 4
  ansible.builtin.command: "kubectl config use-context default --kubeconfig=/etc/kubernetes/config/kube-proxy.kubeconfig"

- name: kubectl config step 5
  ansible.builtin.command: "kubectl config set-cluster kubernetes-the-hard-way --certificate-authority={{CERT_PATH}}/ca_kubernetes.pem --embed-certs=true --server=https://127.0.0.1:6443 --kubeconfig=/etc/kubernetes/config/kube-controller-manager.kubeconfig"
- name: kubectl config step 6
  ansible.builtin.command: "kubectl config set-credentials system:kube-controller-manager --client-certificate={{CERT_PATH}}/kube-controller-manager.pem --client-key={{CERT_PATH}}/kube-controller-manager.key --embed-certs=true --kubeconfig=/etc/kubernetes/config/kube-controller-manager.kubeconfig"
- name: kubectl config step 7
  ansible.builtin.command: "kubectl config set-context default --cluster=kubernetes-the-hard-way --user=system:kube-controller-manager --kubeconfig=/etc/kubernetes/config/kube-controller-manager.kubeconfig"
- name: kubectl config step 8
  ansible.builtin.command: "kubectl config use-context default --kubeconfig=/etc/kubernetes/config/kube-controller-manager.kubeconfig"

- name: kubectl config step 9
  ansible.builtin.command: "kubectl config set-cluster kubernetes-the-hard-way --certificate-authority={{CERT_PATH}}/ca_kubernetes.pem --embed-certs=true --server=https://127.0.0.1:6443 --kubeconfig=/etc/kubernetes/config/kube-scheduler.kubeconfig"
- name: kubectl config step 10
  ansible.builtin.command: "kubectl config set-credentials system:kube-scheduler --client-certificate={{CERT_PATH}}/kube-scheduler.pem --client-key={{CERT_PATH}}/kube-scheduler.key --embed-certs=true --kubeconfig=/etc/kubernetes/config/kube-scheduler.kubeconfig"
- name: kubectl config step 11
  ansible.builtin.command: "kubectl config set-context default --cluster=kubernetes-the-hard-way --user=system:kube-scheduler --kubeconfig=/etc/kubernetes/config/kube-scheduler.kubeconfig"
- name: kubectl config step 12
  ansible.builtin.command: "kubectl config use-context default --kubeconfig=/etc/kubernetes/config/kube-scheduler.kubeconfig"

- name: kubectl config step 13
  ansible.builtin.command: "kubectl config set-cluster kubernetes-the-hard-way --certificate-authority={{CERT_PATH}}/ca_kubernetes.pem --embed-certs=true --server=https://{{KUBERNETES_PUBLIC_ADDRESS}}:6443 --kubeconfig=/root/.kube/config"
- name: kubectl config step 14
  ansible.builtin.command: "kubectl config set-credentials admin --client-certificate={{CERT_PATH}}/admin.pem --client-key={{CERT_PATH}}/admin.key --embed-certs=true --kubeconfig=/root/.kube/config"
- name: kubectl config step 15
  ansible.builtin.command: "kubectl config set-context default --cluster=kubernetes-the-hard-way --user=admin --kubeconfig=/root/.kube/config"
- name: kubectl config step 16
  ansible.builtin.command: "kubectl config use-context default --kubeconfig=/root/.kube/config"
---

- name: Creates directory
  file:
    path: "{{CERT_PATH}}"
    state: directory
    recurse: yes

- name: Create private key for new certificate on {{hostname}} {{inventory_hostname}}
  community.crypto.openssl_privatekey:
    path: "{{CERT_PATH}}/certificate-etcd.key"

- name: ETCD:Mambers:{{hostname}}
  include_tasks:
    file: ./_share/_sign.yml
  vars: 
    _path_key: "{{CERT_PATH}}/certificate-etcd.key"
    _path_crt: "{{CERT_PATH}}/certificate-etcd.pem"
    _common_name: "{{hostname}}"
    _organization_name: "etcd"
    _subject_alt_name:
      - "DNS:{{hostname}}.{{domain}}"
      - "DNS:{{hostname}}"
      - "IP:{{inventory_hostname}}"
      - "IP:127.0.0.1"
    _ca_key: "{{ hostvars['INIT_CA_HOST']['share_ca_etcd']['key']['source'] }}"
    _ca_pem: "{{ hostvars['INIT_CA_HOST']['share_ca_etcd']['crt']['source'] }}"

- name: Write certificate {{item.key}}
  copy:
    dest: "{{ item.value['crt']['source'] }}"
    content: "{{ item.value['crt']['content']|b64decode }}"
  loop: "{{hostvars['INIT_CA_HOST'] | dict2items}}"
  when: 'item["key"] in ["share_etcd_cluster","share_ca_etcd"]'

- name: Write key {{item.key}}
  copy:
    dest: "{{ item.value['key']['source'] }}"
    content: "{{ item.value['key']['content']|b64decode }}"
  loop: "{{hostvars['INIT_CA_HOST'] | dict2items}}"
  when: 'item["key"] in ["share_etcd_cluster"]'